@{
    ViewBag.Title = "Personas";
}
@model Business.Entities.Persona

<link href="~/Content/mis-estilos.css" rel="stylesheet" />
<link href="~/Content/daterangepicker.css" rel="stylesheet" />

@{ if (ViewBag.Message != null)
    {
        if (ViewBag.Error == 1)
        {
            @:<div id="NotifContainer" style="background-color: khaki;">
                @:<h3 id="txtNotification"><i class="bi bi-exclamation-triangle"></i>&nbsp;@ViewBag.Message</h3>
            @:</div>
        }
        else if (ViewBag.Error == 2)
        {
            @:<div id="NotifContainer" style="background-color: crimson;">
                @:<h3 id="txtNotification" style="color: white;"><i class="bi bi-exclamation-diamond"></i>&nbsp;@ViewBag.Message</h3>
            @:</div>
        }
        else
        {
            @:<div id="NotifContainer" style="background-color: cornflowerblue;">
                @:<h3 id="txtNotification" style="color: white;"><i class="bi bi-info-circle"></i>&nbsp;@ViewBag.Message</h3>
            @:</div>
        }
    }
}

<div class="container-fluid d-flex mb-3">
    <div class="row me-4 col-3">
        <label class="form-label">Filtrar por nombre: </label>
        <input type="text" id="filtroNombre" class="form-control" placeholder="Nombre a buscar" />
    </div>
    <div class="row me-4 col-3">
        <label class="form-label">Filtrar por apellido: </label>
        <input type="text" id="filtroApellido" class="form-control" placeholder="Apellido a buscar" />
    </div>
    <div class="row me-4 col-3">
        <label class="form-label">Filtrar por legajo: </label>
        <input type="number" min="0" id="filtroLegajo" class="form-control" placeholder="Legajo a buscar" />
    </div>
</div>
<div class="mb-3">
    <input type="button" class="btn btn-outline-dark" id="limpia-filtro" value="Limpiar" style="max-height:3rem" />
</div>

<div id="tabla-personas">

</div>

<button id="btnAgregar" type="button" class="btn btn-success px-4 mb-5" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
    Agregar
</button>

@{
    using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formPersona" }))
    {
        <!-- Modal -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="staticBackdropLabel"></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body contenedor-modal align-items-center">
                        <label class="mb-3">ID: </label>
                        @Html.TextBoxFor(model => model.ID, new { @id = "txtID", @readonly = "readonly", @class = "form-control limpiarCampo w-25 mb-3" })

                        <label>Nombre: </label>
                        @Html.TextBoxFor(model => model.Nombre, new { @id = "txtNombre", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger mb-3" })

                        <label>Apellido: </label>
                        @Html.TextBoxFor(model => model.Apellido, new { @id = "txtApellido", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.Apellido, null, new { @class = "text-danger mb-3" })

                        <label>Dirección: </label>
                        @Html.TextBoxFor(model => model.Direccion, new { @id = "txtDireccion", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.Direccion, null, new { @class = "text-danger mb-3" })

                        <label>Email: </label>
                        @Html.TextBoxFor(model => model.Email, new { @id = "txtEmail", @type = "email", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger mb-3" })

                        <label>Teléfono: </label>
                        @Html.TextBoxFor(model => model.Telefono, new { @id = "txtTelefono", @type = "tel", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.Telefono, null, new { @class = "text-danger mb-3" })

                        <label>Fecha de nacimiento: </label>
                        @Html.TextBoxFor(model => model.FechaNacimiento, new { @id = "txtNacimiento", @placeholder = "dd/mm/aaaa", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.FechaNacimiento, null, new { @class = "text-danger mb-3" })

                        <label>Legajo: </label>
                        @Html.TextBoxFor(model => model.Legajo, new { @id = "txtLegajo", @type = "number", @class = "form-control limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.Legajo, null, new { @class = "text-danger mb-3" })

                        <label>Tipo: </label>
                        @Html.DropDownListFor(model => model.TipoPersona, new List<SelectListItem>
                        {
                            new SelectListItem{ Text="--Seleccione un tipo--", Value = "" },
                            new SelectListItem{ Text="Docente", Value = "1" },
                            new SelectListItem{ Text="Alumno", Value = "2" },
                         }, new { @id = "comboTipo", @class = "form-select limpiarCampo habilitarCampo deshabilitarCampo" })                        
                        <span></span>
                        @Html.ValidationMessageFor(model => model.TipoPersona, null, new { @class = "text-danger mb-3" })

                        <label class="mb-2">Plan: </label>
                        @Html.DropDownListFor(model => model.IDPlan, new SelectList(ViewBag.listado, "Value", "Text"), "--Seleccione un plan--", new { @id = "comboPlanes", @class = "form-select limpiarCampo habilitarCampo deshabilitarCampo" })
                        <span></span>
                        @Html.ValidationMessageFor(model => model.IDPlan, null, new { @class = "text-danger" })
                    </div>

                    <div class="modal-footer">
                        <button id="btnCancelar" type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Cancelar</button>
                        <button id="btnAceptar" type="submit" class="btn btn-success">Aceptar</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<script src="~/Scripts/moment-with-locales.js"></script>
<script src="~/Scripts/daterangepicker.js"></script>
<script src="~/Scripts/daterangepicker-es.js"></script>
<script src="~/Scripts/Personas.js"></script>