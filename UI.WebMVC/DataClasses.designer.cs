#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.WebMVC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="academia")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlumnosInscripciones(AlumnosInscripciones instance);
    partial void UpdateAlumnosInscripciones(AlumnosInscripciones instance);
    partial void DeleteAlumnosInscripciones(AlumnosInscripciones instance);
    partial void InsertComisiones(Comisiones instance);
    partial void UpdateComisiones(Comisiones instance);
    partial void DeleteComisiones(Comisiones instance);
    partial void InsertCursos(Cursos instance);
    partial void UpdateCursos(Cursos instance);
    partial void DeleteCursos(Cursos instance);
    partial void InsertDocentesCurso(DocentesCurso instance);
    partial void UpdateDocentesCurso(DocentesCurso instance);
    partial void DeleteDocentesCurso(DocentesCurso instance);
    partial void InsertEspecialidades(Especialidades instance);
    partial void UpdateEspecialidades(Especialidades instance);
    partial void DeleteEspecialidades(Especialidades instance);
    partial void InsertMaterias(Materias instance);
    partial void UpdateMaterias(Materias instance);
    partial void DeleteMaterias(Materias instance);
    partial void InsertPersonas(Personas instance);
    partial void UpdatePersonas(Personas instance);
    partial void DeletePersonas(Personas instance);
    partial void InsertPlanes(Planes instance);
    partial void UpdatePlanes(Planes instance);
    partial void DeletePlanes(Planes instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["academiaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AlumnosInscripciones> AlumnosInscripciones
		{
			get
			{
				return this.GetTable<AlumnosInscripciones>();
			}
		}
		
		public System.Data.Linq.Table<Comisiones> Comisiones
		{
			get
			{
				return this.GetTable<Comisiones>();
			}
		}
		
		public System.Data.Linq.Table<Cursos> Cursos
		{
			get
			{
				return this.GetTable<Cursos>();
			}
		}
		
		public System.Data.Linq.Table<DocentesCurso> DocentesCursos
		{
			get
			{
				return this.GetTable<DocentesCurso>();
			}
		}
		
		public System.Data.Linq.Table<Especialidades> Especialidades
		{
			get
			{
				return this.GetTable<Especialidades>();
			}
		}
		
		public System.Data.Linq.Table<Materias> Materias
		{
			get
			{
				return this.GetTable<Materias>();
			}
		}
		
		public System.Data.Linq.Table<Personas> Personas
		{
			get
			{
				return this.GetTable<Personas>();
			}
		}
		
		public System.Data.Linq.Table<Planes> Planes
		{
			get
			{
				return this.GetTable<Planes>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alumnos_inscripciones")]
	public partial class AlumnosInscripciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDAlumno;
		
		private int _IDCurso;
		
		private string _Condicion;
		
		private System.Nullable<int> _Nota;
		
		private EntityRef<Cursos> _Cursos;
		
		private EntityRef<Personas> _Personas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDAlumnoChanging(int value);
    partial void OnIDAlumnoChanged();
    partial void OnIDCursoChanging(int value);
    partial void OnIDCursoChanged();
    partial void OnCondicionChanging(string value);
    partial void OnCondicionChanged();
    partial void OnNotaChanging(System.Nullable<int> value);
    partial void OnNotaChanged();
    #endregion
		
		public AlumnosInscripciones()
		{
			this._Cursos = default(EntityRef<Cursos>);
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_inscripcion", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_alumno", Storage="_IDAlumno", DbType="Int NOT NULL")]
		public int IDAlumno
		{
			get
			{
				return this._IDAlumno;
			}
			set
			{
				if ((this._IDAlumno != value))
				{
					this.OnIDAlumnoChanging(value);
					this.SendPropertyChanging();
					this._IDAlumno = value;
					this.SendPropertyChanged("IDAlumno");
					this.OnIDAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_curso", Storage="_IDCurso", DbType="Int NOT NULL")]
		public int IDCurso
		{
			get
			{
				return this._IDCurso;
			}
			set
			{
				if ((this._IDCurso != value))
				{
					this.OnIDCursoChanging(value);
					this.SendPropertyChanging();
					this._IDCurso = value;
					this.SendPropertyChanged("IDCurso");
					this.OnIDCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="condicion", Storage="_Condicion", DbType="VarChar(50)")]
		public string Condicion
		{
			get
			{
				return this._Condicion;
			}
			set
			{
				if ((this._Condicion != value))
				{
					this.OnCondicionChanging(value);
					this.SendPropertyChanging();
					this._Condicion = value;
					this.SendPropertyChanged("Condicion");
					this.OnCondicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nota", Storage="_Nota", DbType="Int")]
		public System.Nullable<int> Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_alumnos_inscripcione", Storage="_Cursos", ThisKey="IDCurso", OtherKey="ID", IsForeignKey=true)]
		public Cursos Cursos
		{
			get
			{
				return this._Cursos.Entity;
			}
			set
			{
				Cursos previousValue = this._Cursos.Entity;
				if (((previousValue != value) 
							|| (this._Cursos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cursos.Entity = null;
						previousValue.AlumnosInscripciones.Remove(this);
					}
					this._Cursos.Entity = value;
					if ((value != null))
					{
						value.AlumnosInscripciones.Add(this);
						this._IDCurso = value.ID;
					}
					else
					{
						this._IDCurso = default(int);
					}
					this.SendPropertyChanged("Cursos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_alumnos_inscripcione", Storage="_Personas", ThisKey="IDAlumno", OtherKey="ID", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.AlumnosInscripciones.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.AlumnosInscripciones.Add(this);
						this._IDAlumno = value.ID;
					}
					else
					{
						this._IDAlumno = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comisiones")]
	public partial class Comisiones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descripcion;
		
		private int _AnioEspecialidad;
		
		private int _IDPlan;
		
		private EntitySet<Cursos> _Cursos;
		
		private EntityRef<Planes> _Planes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnAnioEspecialidadChanging(int value);
    partial void OnAnioEspecialidadChanged();
    partial void OnIDPlanChanging(int value);
    partial void OnIDPlanChanged();
    #endregion
		
		public Comisiones()
		{
			this._Cursos = new EntitySet<Cursos>(new Action<Cursos>(this.attach_Cursos), new Action<Cursos>(this.detach_Cursos));
			this._Planes = default(EntityRef<Planes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_comision", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desc_comision", Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="anio_especialidad", Storage="_AnioEspecialidad", DbType="Int NOT NULL")]
		public int AnioEspecialidad
		{
			get
			{
				return this._AnioEspecialidad;
			}
			set
			{
				if ((this._AnioEspecialidad != value))
				{
					this.OnAnioEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._AnioEspecialidad = value;
					this.SendPropertyChanged("AnioEspecialidad");
					this.OnAnioEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_plan", Storage="_IDPlan", DbType="Int NOT NULL")]
		public int IDPlan
		{
			get
			{
				return this._IDPlan;
			}
			set
			{
				if ((this._IDPlan != value))
				{
					this.OnIDPlanChanging(value);
					this.SendPropertyChanging();
					this._IDPlan = value;
					this.SendPropertyChanged("IDPlan");
					this.OnIDPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comisione_curso", Storage="_Cursos", ThisKey="ID", OtherKey="IDComision")]
		public EntitySet<Cursos> Cursos
		{
			get
			{
				return this._Cursos;
			}
			set
			{
				this._Cursos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="plane_comisione", Storage="_Planes", ThisKey="IDPlan", OtherKey="ID", IsForeignKey=true)]
		public Planes Planes
		{
			get
			{
				return this._Planes.Entity;
			}
			set
			{
				Planes previousValue = this._Planes.Entity;
				if (((previousValue != value) 
							|| (this._Planes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planes.Entity = null;
						previousValue.Comisiones.Remove(this);
					}
					this._Planes.Entity = value;
					if ((value != null))
					{
						value.Comisiones.Add(this);
						this._IDPlan = value.ID;
					}
					else
					{
						this._IDPlan = default(int);
					}
					this.SendPropertyChanged("Planes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cursos(Cursos entity)
		{
			this.SendPropertyChanging();
			entity.Comisiones = this;
		}
		
		private void detach_Cursos(Cursos entity)
		{
			this.SendPropertyChanging();
			entity.Comisiones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cursos")]
	public partial class Cursos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDMateria;
		
		private int _IDComision;
		
		private int _AnioCalendario;
		
		private int _Cupo;
		
		private EntitySet<AlumnosInscripciones> _AlumnosInscripciones;
		
		private EntitySet<DocentesCurso> _DocentesCursos;
		
		private EntityRef<Comisiones> _Comisiones;
		
		private EntityRef<Materias> _Materias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMateriaChanging(int value);
    partial void OnIDMateriaChanged();
    partial void OnIDComisionChanging(int value);
    partial void OnIDComisionChanged();
    partial void OnAnioCalendarioChanging(int value);
    partial void OnAnioCalendarioChanged();
    partial void OnCupoChanging(int value);
    partial void OnCupoChanged();
    #endregion
		
		public Cursos()
		{
			this._AlumnosInscripciones = new EntitySet<AlumnosInscripciones>(new Action<AlumnosInscripciones>(this.attach_AlumnosInscripciones), new Action<AlumnosInscripciones>(this.detach_AlumnosInscripciones));
			this._DocentesCursos = new EntitySet<DocentesCurso>(new Action<DocentesCurso>(this.attach_DocentesCursos), new Action<DocentesCurso>(this.detach_DocentesCursos));
			this._Comisiones = default(EntityRef<Comisiones>);
			this._Materias = default(EntityRef<Materias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_curso", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_materia", Storage="_IDMateria", DbType="Int NOT NULL")]
		public int IDMateria
		{
			get
			{
				return this._IDMateria;
			}
			set
			{
				if ((this._IDMateria != value))
				{
					this.OnIDMateriaChanging(value);
					this.SendPropertyChanging();
					this._IDMateria = value;
					this.SendPropertyChanged("IDMateria");
					this.OnIDMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_comision", Storage="_IDComision", DbType="Int NOT NULL")]
		public int IDComision
		{
			get
			{
				return this._IDComision;
			}
			set
			{
				if ((this._IDComision != value))
				{
					this.OnIDComisionChanging(value);
					this.SendPropertyChanging();
					this._IDComision = value;
					this.SendPropertyChanged("IDComision");
					this.OnIDComisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="anio_calendario", Storage="_AnioCalendario", DbType="Int NOT NULL")]
		public int AnioCalendario
		{
			get
			{
				return this._AnioCalendario;
			}
			set
			{
				if ((this._AnioCalendario != value))
				{
					this.OnAnioCalendarioChanging(value);
					this.SendPropertyChanging();
					this._AnioCalendario = value;
					this.SendPropertyChanged("AnioCalendario");
					this.OnAnioCalendarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cupo", Storage="_Cupo", DbType="Int NOT NULL")]
		public int Cupo
		{
			get
			{
				return this._Cupo;
			}
			set
			{
				if ((this._Cupo != value))
				{
					this.OnCupoChanging(value);
					this.SendPropertyChanging();
					this._Cupo = value;
					this.SendPropertyChanged("Cupo");
					this.OnCupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_alumnos_inscripcione", Storage="_AlumnosInscripciones", ThisKey="ID", OtherKey="IDCurso")]
		public EntitySet<AlumnosInscripciones> AlumnosInscripciones
		{
			get
			{
				return this._AlumnosInscripciones;
			}
			set
			{
				this._AlumnosInscripciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_docentes_curso", Storage="_DocentesCursos", ThisKey="ID", OtherKey="id_curso")]
		public EntitySet<DocentesCurso> DocentesCursos
		{
			get
			{
				return this._DocentesCursos;
			}
			set
			{
				this._DocentesCursos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comisione_curso", Storage="_Comisiones", ThisKey="IDComision", OtherKey="ID", IsForeignKey=true)]
		public Comisiones Comisiones
		{
			get
			{
				return this._Comisiones.Entity;
			}
			set
			{
				Comisiones previousValue = this._Comisiones.Entity;
				if (((previousValue != value) 
							|| (this._Comisiones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comisiones.Entity = null;
						previousValue.Cursos.Remove(this);
					}
					this._Comisiones.Entity = value;
					if ((value != null))
					{
						value.Cursos.Add(this);
						this._IDComision = value.ID;
					}
					else
					{
						this._IDComision = default(int);
					}
					this.SendPropertyChanged("Comisiones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="materia_curso", Storage="_Materias", ThisKey="IDMateria", OtherKey="ID", IsForeignKey=true)]
		public Materias Materias
		{
			get
			{
				return this._Materias.Entity;
			}
			set
			{
				Materias previousValue = this._Materias.Entity;
				if (((previousValue != value) 
							|| (this._Materias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materias.Entity = null;
						previousValue.Cursos.Remove(this);
					}
					this._Materias.Entity = value;
					if ((value != null))
					{
						value.Cursos.Add(this);
						this._IDMateria = value.ID;
					}
					else
					{
						this._IDMateria = default(int);
					}
					this.SendPropertyChanged("Materias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlumnosInscripciones(AlumnosInscripciones entity)
		{
			this.SendPropertyChanging();
			entity.Cursos = this;
		}
		
		private void detach_AlumnosInscripciones(AlumnosInscripciones entity)
		{
			this.SendPropertyChanging();
			entity.Cursos = null;
		}
		
		private void attach_DocentesCursos(DocentesCurso entity)
		{
			this.SendPropertyChanging();
			entity.Cursos = this;
		}
		
		private void detach_DocentesCursos(DocentesCurso entity)
		{
			this.SendPropertyChanging();
			entity.Cursos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.docentes_cursos")]
	public partial class DocentesCurso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_dictado;
		
		private int _id_curso;
		
		private int _id_docente;
		
		private string _cargo;
		
		private EntityRef<Cursos> _Cursos;
		
		private EntityRef<Personas> _Personas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_dictadoChanging(int value);
    partial void Onid_dictadoChanged();
    partial void Onid_cursoChanging(int value);
    partial void Onid_cursoChanged();
    partial void Onid_docenteChanging(int value);
    partial void Onid_docenteChanged();
    partial void OncargoChanging(string value);
    partial void OncargoChanged();
    #endregion
		
		public DocentesCurso()
		{
			this._Cursos = default(EntityRef<Cursos>);
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_dictado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_dictado
		{
			get
			{
				return this._id_dictado;
			}
			set
			{
				if ((this._id_dictado != value))
				{
					this.Onid_dictadoChanging(value);
					this.SendPropertyChanging();
					this._id_dictado = value;
					this.SendPropertyChanged("id_dictado");
					this.Onid_dictadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso", DbType="Int NOT NULL")]
		public int id_curso
		{
			get
			{
				return this._id_curso;
			}
			set
			{
				if ((this._id_curso != value))
				{
					if (this._Cursos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cursoChanging(value);
					this.SendPropertyChanging();
					this._id_curso = value;
					this.SendPropertyChanged("id_curso");
					this.Onid_cursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_docente", DbType="Int NOT NULL")]
		public int id_docente
		{
			get
			{
				return this._id_docente;
			}
			set
			{
				if ((this._id_docente != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_docenteChanging(value);
					this.SendPropertyChanging();
					this._id_docente = value;
					this.SendPropertyChanged("id_docente");
					this.Onid_docenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cargo
		{
			get
			{
				return this._cargo;
			}
			set
			{
				if ((this._cargo != value))
				{
					this.OncargoChanging(value);
					this.SendPropertyChanging();
					this._cargo = value;
					this.SendPropertyChanged("cargo");
					this.OncargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_docentes_curso", Storage="_Cursos", ThisKey="id_curso", OtherKey="ID", IsForeignKey=true)]
		public Cursos Cursos
		{
			get
			{
				return this._Cursos.Entity;
			}
			set
			{
				Cursos previousValue = this._Cursos.Entity;
				if (((previousValue != value) 
							|| (this._Cursos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cursos.Entity = null;
						previousValue.DocentesCursos.Remove(this);
					}
					this._Cursos.Entity = value;
					if ((value != null))
					{
						value.DocentesCursos.Add(this);
						this._id_curso = value.ID;
					}
					else
					{
						this._id_curso = default(int);
					}
					this.SendPropertyChanged("Cursos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_docentes_curso", Storage="_Personas", ThisKey="id_docente", OtherKey="ID", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.DocentesCursos.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.DocentesCursos.Add(this);
						this._id_docente = value.ID;
					}
					else
					{
						this._id_docente = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.especialidades")]
	public partial class Especialidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descripcion;
		
		private EntitySet<Planes> _Planes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Especialidades()
		{
			this._Planes = new EntitySet<Planes>(new Action<Planes>(this.attach_Planes), new Action<Planes>(this.detach_Planes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_especialidad", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desc_especialidad", Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialidade_plane", Storage="_Planes", ThisKey="ID", OtherKey="IDEspecialidad")]
		public EntitySet<Planes> Planes
		{
			get
			{
				return this._Planes;
			}
			set
			{
				this._Planes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Planes(Planes entity)
		{
			this.SendPropertyChanging();
			entity.Especialidades = this;
		}
		
		private void detach_Planes(Planes entity)
		{
			this.SendPropertyChanging();
			entity.Especialidades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.materias")]
	public partial class Materias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descripcion;
		
		private int _HSSemanales;
		
		private int _HSTotales;
		
		private int _IDPlan;
		
		private EntitySet<Cursos> _Cursos;
		
		private EntityRef<Planes> _Planes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnHSSemanalesChanging(int value);
    partial void OnHSSemanalesChanged();
    partial void OnHSTotalesChanging(int value);
    partial void OnHSTotalesChanged();
    partial void OnIDPlanChanging(int value);
    partial void OnIDPlanChanged();
    #endregion
		
		public Materias()
		{
			this._Cursos = new EntitySet<Cursos>(new Action<Cursos>(this.attach_Cursos), new Action<Cursos>(this.detach_Cursos));
			this._Planes = default(EntityRef<Planes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_materia", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desc_materia", Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hs_semanales", Storage="_HSSemanales", DbType="Int NOT NULL")]
		public int HSSemanales
		{
			get
			{
				return this._HSSemanales;
			}
			set
			{
				if ((this._HSSemanales != value))
				{
					this.OnHSSemanalesChanging(value);
					this.SendPropertyChanging();
					this._HSSemanales = value;
					this.SendPropertyChanged("HSSemanales");
					this.OnHSSemanalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hs_totales", Storage="_HSTotales", DbType="Int NOT NULL")]
		public int HSTotales
		{
			get
			{
				return this._HSTotales;
			}
			set
			{
				if ((this._HSTotales != value))
				{
					this.OnHSTotalesChanging(value);
					this.SendPropertyChanging();
					this._HSTotales = value;
					this.SendPropertyChanged("HSTotales");
					this.OnHSTotalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_plan", Storage="_IDPlan", DbType="Int NOT NULL")]
		public int IDPlan
		{
			get
			{
				return this._IDPlan;
			}
			set
			{
				if ((this._IDPlan != value))
				{
					this.OnIDPlanChanging(value);
					this.SendPropertyChanging();
					this._IDPlan = value;
					this.SendPropertyChanged("IDPlan");
					this.OnIDPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="materia_curso", Storage="_Cursos", ThisKey="ID", OtherKey="IDMateria")]
		public EntitySet<Cursos> Cursos
		{
			get
			{
				return this._Cursos;
			}
			set
			{
				this._Cursos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="plane_materia", Storage="_Planes", ThisKey="IDPlan", OtherKey="ID", IsForeignKey=true)]
		public Planes Planes
		{
			get
			{
				return this._Planes.Entity;
			}
			set
			{
				Planes previousValue = this._Planes.Entity;
				if (((previousValue != value) 
							|| (this._Planes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planes.Entity = null;
						previousValue.Materias.Remove(this);
					}
					this._Planes.Entity = value;
					if ((value != null))
					{
						value.Materias.Add(this);
						this._IDPlan = value.ID;
					}
					else
					{
						this._IDPlan = default(int);
					}
					this.SendPropertyChanged("Planes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cursos(Cursos entity)
		{
			this.SendPropertyChanging();
			entity.Materias = this;
		}
		
		private void detach_Cursos(Cursos entity)
		{
			this.SendPropertyChanging();
			entity.Materias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.personas")]
	public partial class Personas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Direccion;
		
		private string _Email;
		
		private string _Telefono;
		
		private System.DateTime _FechaNacimiento;
		
		private System.Nullable<int> _Legajo;
		
		private int _TipoPersona;
		
		private int _IDPlan;
		
		private EntitySet<AlumnosInscripciones> _AlumnosInscripciones;
		
		private EntitySet<DocentesCurso> _DocentesCursos;
		
		private EntitySet<Usuarios> _Usuarios;
		
		private EntityRef<Planes> _Planes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnLegajoChanging(System.Nullable<int> value);
    partial void OnLegajoChanged();
    partial void OnTipoPersonaChanging(int value);
    partial void OnTipoPersonaChanged();
    partial void OnIDPlanChanging(int value);
    partial void OnIDPlanChanged();
    #endregion
		
		public Personas()
		{
			this._AlumnosInscripciones = new EntitySet<AlumnosInscripciones>(new Action<AlumnosInscripciones>(this.attach_AlumnosInscripciones), new Action<AlumnosInscripciones>(this.detach_AlumnosInscripciones));
			this._DocentesCursos = new EntitySet<DocentesCurso>(new Action<DocentesCurso>(this.attach_DocentesCursos), new Action<DocentesCurso>(this.detach_DocentesCursos));
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			this._Planes = default(EntityRef<Planes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_persona", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nombre", Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="apellido", Storage="_Apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="direccion", Storage="_Direccion", DbType="VarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="telefono", Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fecha_nac", Storage="_FechaNacimiento", DbType="DateTime NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="legajo", Storage="_Legajo", DbType="Int")]
		public System.Nullable<int> Legajo
		{
			get
			{
				return this._Legajo;
			}
			set
			{
				if ((this._Legajo != value))
				{
					this.OnLegajoChanging(value);
					this.SendPropertyChanging();
					this._Legajo = value;
					this.SendPropertyChanged("Legajo");
					this.OnLegajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tipo_persona", Storage="_TipoPersona", DbType="Int NOT NULL")]
		public int TipoPersona
		{
			get
			{
				return this._TipoPersona;
			}
			set
			{
				if ((this._TipoPersona != value))
				{
					this.OnTipoPersonaChanging(value);
					this.SendPropertyChanging();
					this._TipoPersona = value;
					this.SendPropertyChanged("TipoPersona");
					this.OnTipoPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_plan", Storage="_IDPlan", DbType="Int NOT NULL")]
		public int IDPlan
		{
			get
			{
				return this._IDPlan;
			}
			set
			{
				if ((this._IDPlan != value))
				{
					this.OnIDPlanChanging(value);
					this.SendPropertyChanging();
					this._IDPlan = value;
					this.SendPropertyChanged("IDPlan");
					this.OnIDPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_alumnos_inscripcione", Storage="_AlumnosInscripciones", ThisKey="ID", OtherKey="IDAlumno")]
		public EntitySet<AlumnosInscripciones> AlumnosInscripciones
		{
			get
			{
				return this._AlumnosInscripciones;
			}
			set
			{
				this._AlumnosInscripciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_docentes_curso", Storage="_DocentesCursos", ThisKey="ID", OtherKey="id_docente")]
		public EntitySet<DocentesCurso> DocentesCursos
		{
			get
			{
				return this._DocentesCursos;
			}
			set
			{
				this._DocentesCursos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_usuario", Storage="_Usuarios", ThisKey="ID", OtherKey="IDPersona")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="plane_persona", Storage="_Planes", ThisKey="IDPlan", OtherKey="ID", IsForeignKey=true)]
		public Planes Planes
		{
			get
			{
				return this._Planes.Entity;
			}
			set
			{
				Planes previousValue = this._Planes.Entity;
				if (((previousValue != value) 
							|| (this._Planes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planes.Entity = null;
						previousValue.Personas.Remove(this);
					}
					this._Planes.Entity = value;
					if ((value != null))
					{
						value.Personas.Add(this);
						this._IDPlan = value.ID;
					}
					else
					{
						this._IDPlan = default(int);
					}
					this.SendPropertyChanged("Planes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlumnosInscripciones(AlumnosInscripciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_AlumnosInscripciones(AlumnosInscripciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_DocentesCursos(DocentesCurso entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_DocentesCursos(DocentesCurso entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.planes")]
	public partial class Planes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descripcion;
		
		private int _IDEspecialidad;
		
		private EntitySet<Comisiones> _Comisiones;
		
		private EntitySet<Materias> _Materias;
		
		private EntitySet<Personas> _Personas;
		
		private EntityRef<Especialidades> _Especialidades;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIDEspecialidadChanging(int value);
    partial void OnIDEspecialidadChanged();
    #endregion
		
		public Planes()
		{
			this._Comisiones = new EntitySet<Comisiones>(new Action<Comisiones>(this.attach_Comisiones), new Action<Comisiones>(this.detach_Comisiones));
			this._Materias = new EntitySet<Materias>(new Action<Materias>(this.attach_Materias), new Action<Materias>(this.detach_Materias));
			this._Personas = new EntitySet<Personas>(new Action<Personas>(this.attach_Personas), new Action<Personas>(this.detach_Personas));
			this._Especialidades = default(EntityRef<Especialidades>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_plan", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desc_plan", Storage="_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_especialidad", Storage="_IDEspecialidad", DbType="Int NOT NULL")]
		public int IDEspecialidad
		{
			get
			{
				return this._IDEspecialidad;
			}
			set
			{
				if ((this._IDEspecialidad != value))
				{
					this.OnIDEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._IDEspecialidad = value;
					this.SendPropertyChanged("IDEspecialidad");
					this.OnIDEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="plane_comisione", Storage="_Comisiones", ThisKey="ID", OtherKey="IDPlan")]
		public EntitySet<Comisiones> Comisiones
		{
			get
			{
				return this._Comisiones;
			}
			set
			{
				this._Comisiones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="plane_materia", Storage="_Materias", ThisKey="ID", OtherKey="IDPlan")]
		public EntitySet<Materias> Materias
		{
			get
			{
				return this._Materias;
			}
			set
			{
				this._Materias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="plane_persona", Storage="_Personas", ThisKey="ID", OtherKey="IDPlan")]
		public EntitySet<Personas> Personas
		{
			get
			{
				return this._Personas;
			}
			set
			{
				this._Personas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="especialidade_plane", Storage="_Especialidades", ThisKey="IDEspecialidad", OtherKey="ID", IsForeignKey=true)]
		public Especialidades Especialidades
		{
			get
			{
				return this._Especialidades.Entity;
			}
			set
			{
				Especialidades previousValue = this._Especialidades.Entity;
				if (((previousValue != value) 
							|| (this._Especialidades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidades.Entity = null;
						previousValue.Planes.Remove(this);
					}
					this._Especialidades.Entity = value;
					if ((value != null))
					{
						value.Planes.Add(this);
						this._IDEspecialidad = value.ID;
					}
					else
					{
						this._IDEspecialidad = default(int);
					}
					this.SendPropertyChanged("Especialidades");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comisiones(Comisiones entity)
		{
			this.SendPropertyChanging();
			entity.Planes = this;
		}
		
		private void detach_Comisiones(Comisiones entity)
		{
			this.SendPropertyChanging();
			entity.Planes = null;
		}
		
		private void attach_Materias(Materias entity)
		{
			this.SendPropertyChanging();
			entity.Planes = this;
		}
		
		private void detach_Materias(Materias entity)
		{
			this.SendPropertyChanging();
			entity.Planes = null;
		}
		
		private void attach_Personas(Personas entity)
		{
			this.SendPropertyChanging();
			entity.Planes = this;
		}
		
		private void detach_Personas(Personas entity)
		{
			this.SendPropertyChanging();
			entity.Planes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NombreUsuario;
		
		private string _Clave;
		
		private bool _Habilitado;
		
		private System.Nullable<bool> _cambia_clave;
		
		private System.Nullable<int> _IDPersona;
		
		private EntityRef<Personas> _Personas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreUsuarioChanging(string value);
    partial void OnNombreUsuarioChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnHabilitadoChanging(bool value);
    partial void OnHabilitadoChanged();
    partial void Oncambia_claveChanging(System.Nullable<bool> value);
    partial void Oncambia_claveChanged();
    partial void OnIDPersonaChanging(System.Nullable<int> value);
    partial void OnIDPersonaChanged();
    #endregion
		
		public Usuarios()
		{
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_usuario", Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nombre_usuario", Storage="_NombreUsuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NombreUsuario
		{
			get
			{
				return this._NombreUsuario;
			}
			set
			{
				if ((this._NombreUsuario != value))
				{
					this.OnNombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NombreUsuario = value;
					this.SendPropertyChanged("NombreUsuario");
					this.OnNombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="clave", Storage="_Clave", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="habilitado", Storage="_Habilitado", DbType="Bit NOT NULL")]
		public bool Habilitado
		{
			get
			{
				return this._Habilitado;
			}
			set
			{
				if ((this._Habilitado != value))
				{
					this.OnHabilitadoChanging(value);
					this.SendPropertyChanging();
					this._Habilitado = value;
					this.SendPropertyChanged("Habilitado");
					this.OnHabilitadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cambia_clave", DbType="Bit")]
		public System.Nullable<bool> cambia_clave
		{
			get
			{
				return this._cambia_clave;
			}
			set
			{
				if ((this._cambia_clave != value))
				{
					this.Oncambia_claveChanging(value);
					this.SendPropertyChanging();
					this._cambia_clave = value;
					this.SendPropertyChanged("cambia_clave");
					this.Oncambia_claveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_persona", Storage="_IDPersona", DbType="Int")]
		public System.Nullable<int> IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_usuario", Storage="_Personas", ThisKey="IDPersona", OtherKey="ID", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._IDPersona = value.ID;
					}
					else
					{
						this._IDPersona = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
